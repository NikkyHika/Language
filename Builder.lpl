number main()
begin
    text filec;
    text lpl;
    text cpp;
    display "ENTER PATH TO .LPL FILE\n";
    display "=======================\n";
    lpl = ask();
    filec = fileGetContents(lpl);
    cpp = "#include <iostream>\n#include <string>\n#include <fstream>\n#include <Windows.h>\n#include <list>\n\nstd::string fileGetContents(std::string file_path) {\n    std::ifstream content(file_path);\n    std::string contentLINE;\n    std::string contentRETURN;\n    while (std::getline(content, contentLINE)) {\n        contentRETURN += contentLINE + \"\\n\"; \n    }\n    content.close();\n    return contentRETURN;\n}\n\nvoid filePutContents(std::string file_path, std::string file_contents) {\n    std::ofstream fileaddc(file_path);\n    fileaddc << file_contents;\n    fileaddc.close();\n}\n\nstd::string ask() {\n    std::string stirngask;\n    std::getline(std::cin, stirngask);\n    return stirngask;\n}\n\nstd::list<std::string> explode(char separator, std::string text) {\n    int i = 0;\n    std::list<std::string> result = {};\n    std::string element = \"\";\n    while (i < text.length()) {\n        if (text[i] == separator) {\n            result.push_back(element);\n            element = \"\";\n        }\n        else if (i == (text.length() - 1)) {\n            element += text[i];\n            result.push_back(element);\n            element = \"\";\n        }\n        else {\n            element += text[i];\n        }\n        i++;\n    }\n    return result;\n}\n\nstd::string getPath() {\n    system(\"echo %CD%>>getpath.txt\");\n    std::string getpath = fileGetContents(\"getpath.txt\");\n    system(\"del getpath.txt\");\n    return getpath;\n}\n\nstd::list<std::string> listDir() {\n    system(\"dir /b>listdir.txt\");\n    std::string listdir = fileGetContents(\"listdir.txt\");\n    system(\"del listdir.txt\");\n    return explode('\\n', listdir);\n}\n\nvoid deleteFile(std::string filename) {\n    system((\"del \" + filename).c_str());\n}\n\nvoid deleteFolder(std::string foldername) {\n    system((\"rmdir \" + foldername).c_str());\n}\n\nvoid createFolder(std::string foldername) {\n    system((\"mkdir \" + foldername).c_str());\n}\n\nvoid changeDir(std::string foldername) {\n    system((\"cd \" + foldername).c_str());\n}\n\nvoid cmdCommand(std::string command) {\n    system(command.c_str());\n}\n\n#define display std::cout << \n#define number int\n#define text std::string\n#define symbol char\n#define point_number float\n#define list std::list\n#define begin { \n#define end }\n#define loop while\n#define textToNum std::stoi\n"+filec;
    filePutContents("cppfile.cpp", cpp);
    system("mingw32\\bin\\g++ cppfile.cpp -o output.exe -static");
    std::cin;
end
